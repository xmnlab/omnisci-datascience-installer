name: packaging

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  macos:

    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: configure
      shell: bash -l {0}
      run: |
        ulimit -S -n 204800
        sudo sysctl -w kern.maxfiles=204800
        sudo sysctl -w kern.maxfilesperproc=245670

    - uses: conda-incubator/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: omnisci-ds-installer
        channels: conda-forge

    - name: install dependencies
      shell: bash -l {0}
      run: |
        conda install constructor
        wget https://repo.anaconda.com/pkgs/misc/conda-execs/conda-latest-osx-64.exe -O conda.exe

    - name: run constructor
      shell: bash -l {0}
      run: |
        #Â constructor --conda-exe conda.exe constructor/
        touch omnisci-0.0.2-MacOSX-x86_64.pkg

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: get package name 
      id: package_name
      run: |
        PACK_NAME=$(ls omnisci-*-MacOSX-x86_64.pkg)
        echo "::set-output name=filename::$PACK_NAME"
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above, referencing it's ID to
        # get its outputs object, which include a `upload_url`. See this blog 
        # post for more info: 
        # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package_name.outputs.filename }}
        asset_name: ${{ steps.package_name.outputs.filename }}
<<<<<<< HEAD
        asset_content_type: application/vnd.macports.portpkg
=======
        asset_content_type: application/octet-stream
>>>>>>> add gh actions for package releasing
